{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\astir\\\\Projects\\\\for_matt_demo\\\\boosterthon-ui\\\\src\\\\components\\\\add-fundraiser.component.js\";\nimport React, { Component } from \"react\";\nimport FundraiserDataService from \"../services/fundraiser.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddFundraiser extends Component {\n  constructor(props) {\n    super(props);\n    /** set initial state */\n\n    this.validateForm = () => {\n      console.log(\"\\n ####VALIDATING FORM\"); // Validate all required fields\n\n      this.validateField('revieweremail', this.state.revieweremail);\n    };\n\n    this.validateField = (fieldName, value) => {\n      console.log('-->Validating Input:' + fieldName); // Current Form Error Notification Verbiage\n\n      let newFieldValidationErrors = this.state.formErrors; // current isValid Bools\n\n      let emailValid = this.state.emailValid;\n\n      switch (fieldName) {\n        case 'revieweremail':\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          newFieldValidationErrors.email = emailValid ? '' : ' is invalid';\n          break;\n        // case 'password':\n        // \tpasswordValid = value.length >= 6;\n        // \tfieldValidationErrors.password = passwordValid ? '': ' is too short';\n        // \tbreak;\n\n        default:\n          break;\n      } // Update Existing Validation Error Notification & isValid State\n\n\n      this.setState({\n        formErrors: newFieldValidationErrors,\n        emailValid: emailValid // passwordValid: passwordValid\n\n      }, this.doneValidating());\n    };\n\n    this.doneValidating = () => {\n      console.log(\"  ###=> Done Validating Form\");\n      console.log(this.state);\n    };\n\n    this.onInputFieldUpdate = e => {\n      // console.log(e.target);\n      console.log(\"Updated\" + e.target.name);\n      const updateStateProp = {};\n      updateStateProp[e.target.name] = e.target.value;\n      this.setState(updateStateProp);\n    };\n\n    this.saveFundraiser = () => {\n      var data = {\n        fundlabel: this.state.fundlabel,\n        rating: this.state.rating,\n        review: this.state.review,\n        reviewername: this.state.reviewername,\n        revieweremail: this.state.revieweremail,\n        reviewdate: this.state.reviewdate\n      };\n      FundraiserDataService.create(data).then(response => {\n        this.setState({\n          id: response.data.id,\n          published: response.data.published,\n          fundlabel: response.data.fundlabel,\n          rating: response.data.rating,\n          review: response.data.review,\n          reviewername: response.data.reviewername,\n          revieweremail: response.data.revieweremail,\n          reviewdate: response.data.reviewdate,\n          // set successfull update\n          submitted: true\n        });\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.newFundraiser = () => {\n      this.setState({\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false,\n        fundlabel: \"\",\n        rating: \"\",\n        review: \"\",\n        reviewername: \"\",\n        revieweremail: \"\",\n        reviewdate: new Date().toLocaleDateString('en-us', {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\"\n        }),\n        submitted: false\n      });\n    };\n\n    this.renderSuccesState = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"You submitted successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.newFundraiser,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.renderEditCreateForm = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fundlabel\",\n            children: \"Fundraiser Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"fundlabel\",\n            required: true,\n            value: this.state.fundlabel,\n            onChange: this.onInputFieldUpdate,\n            name: \"fundlabel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rating\",\n            children: \"Rating (1-5)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"rating\",\n            required: true,\n            value: this.state.rating,\n            onChange: this.onInputFieldUpdate,\n            name: \"rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"review\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"review\",\n            required: true,\n            value: this.state.review,\n            onChange: this.onInputFieldUpdate,\n            name: \"review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reviewername\",\n            children: \"Reviewer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"reviewername\",\n            required: true,\n            value: this.state.reviewername,\n            onChange: this.onInputFieldUpdate,\n            name: \"reviewername\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"revieweremail\",\n            children: \"Reviewer Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"revieweremail\",\n            required: true,\n            value: this.state.revieweremail,\n            onChange: this.onInputFieldUpdate,\n            name: \"revieweremail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.validateForm,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.renderFormErrors = () => {\n      const formErrorKeys = Object.keys(this.state.formErrors);\n      let hasNoErrors = Object.values(this.state.formErrors).every(x => x === null || x === '');\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: hasNoErrors ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Form Errors: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"errorList\",\n            style: {\n              color: \"red\"\n            },\n            children: formErrorKeys.filter(errorKey => this.state.formErrors[errorKey] != null).map((errorKey, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: errorKey + \": \" + this.state.formErrors[errorKey]\n            }, \"err_\" + errorKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      fundlabel: \"\",\n      rating: \"\",\n      review: \"\",\n      reviewername: \"\",\n      revieweremail: \"\",\n      reviewdate: new Date().toLocaleDateString('en-us', {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      }),\n      // Validation Field States\n      emailValid: false,\n      ratingValid: false,\n      // Error Notification Verbiage\n      formErrors: {\n        email: null,\n        rating: null\n      },\n      // State props\n      published: false,\n      submitted: false\n    };\n  }\n  /** Validates  Form after checking fields */\n\n\n  /**\r\n   * \r\n   * @returns Submition Success State or Edit/Create Input Form\r\n   */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: [this.state.submitted === true ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: this.renderSuccesState()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [\" \", this.renderEditCreateForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 101\n      }, this), this.renderFormErrors()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/astir/Projects/for_matt_demo/boosterthon-ui/src/components/add-fundraiser.component.js"],"names":["React","Component","FundraiserDataService","AddFundraiser","constructor","props","validateForm","console","log","validateField","state","revieweremail","fieldName","value","newFieldValidationErrors","formErrors","emailValid","match","email","setState","doneValidating","onInputFieldUpdate","e","target","name","updateStateProp","saveFundraiser","data","fundlabel","rating","review","reviewername","reviewdate","create","then","response","id","published","submitted","catch","newFundraiser","title","description","Date","toLocaleDateString","weekday","year","month","day","renderSuccesState","renderEditCreateForm","renderFormErrors","formErrorKeys","Object","keys","hasNoErrors","values","every","x","color","filter","errorKey","map","index","ratingValid","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FundraiserDataService from \"../services/fundraiser.service\";\r\n\r\nexport default class AddFundraiser extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t/** set initial state */\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t\tid: null,\r\n\t\t\ttitle: \"\",\r\n\t\t\tdescription: \"\",\r\n\r\n\t\t\t\tfundlabel : \"\",\r\n\t\t\t\trating : \"\",\r\n\t\t\t\treview : \"\",\r\n\t\t\t\treviewername: \"\",\r\n\t\t\t\trevieweremail: \"\",\r\n\t\t\t\treviewdate:  new Date().toLocaleDateString('en-us', { weekday:\"long\", year:\"numeric\", month:\"short\", day:\"numeric\"}) ,\r\n\r\n\t\t\t// Validation Field States\r\n\t\t\temailValid : false,\r\n\t\t\tratingValid : false,\r\n\r\n\t\t\t// Error Notification Verbiage\r\n\t\t\tformErrors : {\r\n\t\t\t\temail : null,\r\n\t\t\t\trating : null\r\n\t\t\t},\r\n\r\n\r\n\t\t\t\r\n\t\t\t// State props\r\n\t\t\tpublished: false,\r\n\t\t\tsubmitted: false\r\n\t\t};\r\n\t}\r\n\r\n\t/** Validates  Form after checking fields */\r\n\tvalidateForm = () => {\r\n\t\tconsole.log(\"\\n ####VALIDATING FORM\");\r\n\t\t// Validate all required fields\r\n\t\t\tthis.validateField('revieweremail', this.state.revieweremail);\r\n\t}\r\n\r\n\t/** Validate Form */\r\n\tvalidateField = (fieldName, value) => {\r\n\t\tconsole.log('-->Validating Input:'+fieldName);\r\n\t\t// Current Form Error Notification Verbiage\r\n\t\tlet newFieldValidationErrors = this.state.formErrors;\r\n\r\n\t\t// current isValid Bools\r\n\t\tlet emailValid = this.state.emailValid;\r\n\t\r\n\t\tswitch(fieldName) {\r\n\t\t\tcase 'revieweremail':\r\n\t\t\t\temailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n\t\t\t\tnewFieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n\t\t\t\tbreak;\r\n\t\t\t// case 'password':\r\n\t\t\t// \tpasswordValid = value.length >= 6;\r\n\t\t\t// \tfieldValidationErrors.password = passwordValid ? '': ' is too short';\r\n\t\t\t// \tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\t// Update Existing Validation Error Notification & isValid State\r\n\t\tthis.setState({formErrors: newFieldValidationErrors,\r\n\t\t\temailValid: emailValid,\r\n\t\t\t// passwordValid: passwordValid\r\n\t\t}, this.doneValidating());\r\n\t}\r\n\r\n\tdoneValidating = () => {\r\n\t\tconsole.log(\"  ###=> Done Validating Form\");\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\t\r\n\t// validateEmail = () => {\r\n\t// \tconst currentEmail = this.state.revieweremail;\r\n\t// \tlet newFormErrors = this.state.formErrors;\r\n\t// \tlet emailValid = this.state.emailValid;\r\n\t// \temailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n\t// \tnewFormErrors[email]\r\n\r\n\t// \tthis.setState({formErrors: {...currentFormErrors, {\"email\":\" is invalid\"});\r\n\t// \tthis.state.email = emailValid ? '' : ' is invalid';\r\n\r\n\t// }\r\n\r\n\r\n\t\r\n\t/** Handle Text input field Updates */\r\n\tonInputFieldUpdate = (e) =>  {\r\n\t\t// console.log(e.target);\r\n\t\tconsole.log(\"Updated\" + e.target.name);\r\n\t\t\r\n\t\tconst updateStateProp = {};\r\n\t\tupdateStateProp[e.target.name] = e.target.value;\r\n\t\tthis.setState(updateStateProp);\r\n\t}\r\n\r\n\r\n\t/** Validate then Save if good, update errors state if bad */\r\n\tsaveFundraiser = () => {\r\n\t\t\r\n\t\tvar data = {\r\n\t\t\tfundlabel : this.state.fundlabel,\r\n\t\t\trating : this.state.rating,\r\n\t\t\treview : this.state.review,\r\n\t\t\treviewername: this.state.reviewername,\r\n\t\t\trevieweremail: this.state.revieweremail,\r\n\t\t\treviewdate:  this.state.reviewdate,\r\n\t\t};\r\n\r\n\t\tFundraiserDataService.create(data)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tid: response.data.id,\r\n\t\t\t\t\tpublished: response.data.published,\r\n\t\t\t\t\tfundlabel : response.data.fundlabel,\r\n\t\t\t\t\trating : response.data.rating,\r\n\t\t\t\t\treview : response.data.review,\r\n\t\t\t\t\treviewername:response.data.reviewername,\r\n\t\t\t\t\trevieweremail: response.data.revieweremail,\r\n\t\t\t\t\treviewdate:  response.data.reviewdate,\r\n\t\t\t\t\t\r\n\t\t\t\t\t// set successfull update\r\n\t\t\t\t\tsubmitted: true\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set form state for new entry\r\n\t */\r\n\tnewFundraiser = () => {\r\n\t\tthis.setState({\r\n\t\t\tid: null,\r\n\t\t\ttitle: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\tpublished: false,\r\n\r\n\t\t\tfundlabel : \"\",\r\n\t\t\trating : \"\",\r\n\t\t\treview : \"\",\r\n\t\t\treviewername: \"\",\r\n\t\t\trevieweremail: \"\",\r\n\t\t\treviewdate:  new Date().toLocaleDateString('en-us', { weekday:\"long\", year:\"numeric\", month:\"short\", day:\"numeric\"}) ,\r\n\r\n\t\t\tsubmitted: false\r\n\t\t});\r\n\t}\r\n\r\n\trenderSuccesState = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h4>You submitted successfully!</h4>\r\n\t\t\t\t\r\n\t\t\t\t{/** Create another ADD button */}\r\n\t\t\t\t<button className=\"btn btn-success\" onClick={this.newFundraiser}>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trenderEditCreateForm = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/** FUNDRAISER LABEL INPUT */}\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"fundlabel\">Fundraiser Label</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"fundlabel\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.fundlabel}\r\n\t\t\t\t\t\tonChange={this.onInputFieldUpdate}\r\n\t\t\t\t\t\tname=\"fundlabel\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/** RATING INPUT */}\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"rating\">Rating (1-5)</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"rating\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.rating}\r\n\t\t\t\t\t\tonChange={this.onInputFieldUpdate}\r\n\t\t\t\t\t\tname=\"rating\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/** REVIEW INPUT */}\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"review\">Review</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"review\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.review}\r\n\t\t\t\t\t\tonChange={this.onInputFieldUpdate}\r\n\t\t\t\t\t\tname=\"review\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/** REVIEWER NAME INPUT */}\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"reviewername\">Reviewer Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"reviewername\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.reviewername}\r\n\t\t\t\t\t\tonChange={this.onInputFieldUpdate}\r\n\t\t\t\t\t\tname=\"reviewername\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/** REVIEWER EMAIL INPUT */}\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"revieweremail\">Reviewer Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"revieweremail\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.revieweremail}\r\n\t\t\t\t\t\tonChange={this.onInputFieldUpdate}\r\n\t\t\t\t\t\tname=\"revieweremail\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/** Validate form & Submit */}\r\n\t\t\t\t<button onClick={this.validateForm} className=\"btn btn-success\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @returns Form Field Errors if Exist\r\n\t */\r\n\trenderFormErrors = () => {\r\n\t\tconst formErrorKeys = Object.keys(this.state.formErrors);\r\n\t\tlet hasNoErrors = Object.values(this.state.formErrors).every(x => x === null || x === '');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{hasNoErrors ? <React.Fragment></React.Fragment> : \r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<h2>Form Errors: </h2>\r\n\t\t\t\t\t\t\t<ul className=\"errorList\" style={{color: \"red\"}}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tformErrorKeys.filter((errorKey)=>this.state.formErrors[errorKey] != null).map((errorKey, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<li\t\r\n\t\t\t\t\t\t\t\t\t\t\tkey={\"err_\"+errorKey}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{errorKey + \": \"+this.state.formErrors[errorKey]}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\t\r\n\t/**\r\n\t * \r\n\t * @returns Submition Success State or Edit/Create Input Form\r\n\t */\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"submit-form\">\r\n\t\t\t\t\t{this.state.submitted === true ? <React.Fragment>{this.renderSuccesState()}</React.Fragment> : <React.Fragment> {this.renderEditCreateForm()}</React.Fragment> }\r\n\t\t\t\t\t{this.renderFormErrors()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}